<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Programmer Notes</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://buqento.com/"/>
  <updated>2018-09-05T10:59:53.511Z</updated>
  <id>http://buqento.com/</id>
  
  <author>
    <name>Buqento Richard</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>membuat blog menggunakan hexo framework</title>
    <link href="http://buqento.com/2018/09/05/membuat-blog-menggunakan-hexo-framework/"/>
    <id>http://buqento.com/2018/09/05/membuat-blog-menggunakan-hexo-framework/</id>
    <published>2018-09-05T10:56:41.000Z</published>
    <updated>2018-09-05T10:59:53.511Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo adalah salah satu blog framework yang handal. Hexo sangatlah simpel dan powerful. Dengan Hexo, anda cukup menulis postingan menggunakan Markdown. Markdown adalah sebuah tool yang mengubah text-to-HTML. Dokumentasi Hexo lebih lengkap <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>.</p><h3 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h3><p>Untuk menggunakan Hexo dalam membuat blog, anda perlu menginstal <a href="http://nodejs.org/" target="_blank" rel="noopener">NodeJS</a> dan <a href="http://git-scm.com/" target="_blank" rel="noopener">GIT</a><br><a id="more"></a></p><h3 id="Generate-blog"><a href="#Generate-blog" class="headerlink" title="Generate blog"></a>Generate blog</h3><p>Buatkan direktori (folder) untuk menyimpan file-file hasil generate Hexo. Ikuti langkah dibawah:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\xampp\htdocs&gt;md hexobase</span><br><span class="line">C:\xampp\htdocs&gt;<span class="built_in">cd</span> hexobase</span><br><span class="line">C:\xampp\htdocs\hexobase&gt;npm install -g myblog</span><br><span class="line">C:\xampp\htdocs\hexobase&gt;hexo init</span><br><span class="line">C:\xampp\htdocs\hexobase&gt;hexo generate</span><br><span class="line">C:\xampp\htdocs\hexobase&gt;hexo server</span><br></pre></td></tr></table></figure></p><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p>Pastinya setelah blog telah terbentuk, anda perlu membuat postingan pada blog. Caranya sangat mudah:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo adalah salah satu blog framework yang handal. Hexo sangatlah simpel dan powerful. Dengan Hexo, anda cukup menulis postingan menggunakan Markdown. Markdown adalah sebuah tool yang mengubah text-to-HTML. Dokumentasi Hexo lebih lengkap &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;Tools&quot;&gt;&lt;a href=&quot;#Tools&quot; class=&quot;headerlink&quot; title=&quot;Tools&quot;&gt;&lt;/a&gt;Tools&lt;/h3&gt;&lt;p&gt;Untuk menggunakan Hexo dalam membuat blog, anda perlu menginstal &lt;a href=&quot;http://nodejs.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;NodeJS&lt;/a&gt; dan &lt;a href=&quot;http://git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GIT&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
      <category term="NodeJS" scheme="http://buqento.com/categories/NodeJS/"/>
    
    
      <category term="web" scheme="http://buqento.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>langkah cepat menginstal phalcon framework</title>
    <link href="http://buqento.com/2018/09/05/langkah-cepat-menginstal-phalcon-framework/"/>
    <id>http://buqento.com/2018/09/05/langkah-cepat-menginstal-phalcon-framework/</id>
    <published>2018-09-05T10:07:54.000Z</published>
    <updated>2018-09-05T10:59:18.802Z</updated>
    
    <content type="html"><![CDATA[<p>A full-stack PHP framework delivered as a C-extension. Judul utama saat berkunjung ke [phalconphp.com] (<a href="https://phalconphp.com/en/)" target="_blank" rel="noopener">https://phalconphp.com/en/)</a>. Phalcon merupakan framework PHP yang menggunakan C-extention, membuatnya sangat ringan dan cepat.<br><a id="more"></a></p><h2 id="Instal-file-dll"><a href="#Instal-file-dll" class="headerlink" title="Instal file dll"></a>Instal file dll</h2><p>Langkah pertama yang yang mestinya dilakukan untuk menggunakan phalcon pada windows adalah dengan menginstal phalcon.dll. DLL file tersebut dapat di unduh melalui <a href="https://phalconphp.com/en/download/windows" target="_blank" rel="noopener">phalcon</a></p><h2 id="Periksa-versi-dan-arsitektur"><a href="#Periksa-versi-dan-arsitektur" class="headerlink" title="Periksa versi dan arsitektur"></a>Periksa versi dan arsitektur</h2><p>Selanjutnya anda dapat memeriksa versi dan arsitektur PHP melalui phpinfo() agar tidak mengunduh DLL yang salah. </p><img src="/2018/09/05/langkah-cepat-menginstal-phalcon-framework/arsitektur.png" title="Versi dan arsitektur"><p>Pada gambar di atas, terlihat bahwa komputer yang saya pakai menggunakan PHP versi 7.2.3 dengan arsitektur x86. Oleh karena itu, yang harus saya unduh adalah: </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">phalcon_x86_vc15_php7.2_3.4.1-1751.zip</span><br></pre></td></tr></table></figure><p>Setelah diunduh, ekstrak dan salin file dll tersebut ke direktori.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\xampp\php\ext</span><br></pre></td></tr></table></figure><img src="/2018/09/05/langkah-cepat-menginstal-phalcon-framework/ekstrak.png" title="Lokasi ekstrak file dll"><h2 id="Konfigurasi-PHP-ini"><a href="#Konfigurasi-PHP-ini" class="headerlink" title="Konfigurasi PHP.ini"></a>Konfigurasi PHP.ini</h2><p>Lakukan konfigurasi dengan menambahkan statemen pada file PHP.ini (C:\xampp\php).<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension=php_phalcon.dll</span><br></pre></td></tr></table></figure></p><img src="/2018/09/05/langkah-cepat-menginstal-phalcon-framework/change.png" title="Konfigurasi ekstention PHP.ini"><h2 id="Restart-webserver"><a href="#Restart-webserver" class="headerlink" title="Restart webserver"></a>Restart webserver</h2><p>Restart server anda untuk memastikan apakah telah berhasil menginstal phalcon pada server. Untuk melihat hasilnya, periksa pada phpinfo().</p><img src="/2018/09/05/langkah-cepat-menginstal-phalcon-framework/berhasil.png" title="Tampilan phpinfo">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;A full-stack PHP framework delivered as a C-extension. Judul utama saat berkunjung ke [phalconphp.com] (&lt;a href=&quot;https://phalconphp.com/en/)&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://phalconphp.com/en/)&lt;/a&gt;. Phalcon merupakan framework PHP yang menggunakan C-extention, membuatnya sangat ringan dan cepat.&lt;br&gt;
    
    </summary>
    
      <category term="Phalcon" scheme="http://buqento.com/categories/Phalcon/"/>
    
    
      <category term="web" scheme="http://buqento.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>How to login user from a database</title>
    <link href="http://buqento.com/2018/09/03/how-to-login-user-from-a-database/"/>
    <id>http://buqento.com/2018/09/03/how-to-login-user-from-a-database/</id>
    <published>2018-09-03T09:09:59.000Z</published>
    <updated>2018-09-05T02:12:35.438Z</updated>
    
    <content type="html"><![CDATA[<p>This tutorial explains how to make login functionality with users coming from database. Login functionality is one of the most important parts of every application. </p><h2 id="Create-table"><a href="#Create-table" class="headerlink" title="Create table"></a>Create table</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE `user_admin` (</span><br><span class="line">  `id` int(10) UNSIGNED NOT NULL,</span><br><span class="line">  `first_name` varchar(15) DEFAULT NULL,</span><br><span class="line">  `last_name` varchar(20) DEFAULT NULL,</span><br><span class="line">  `username` varchar(30) DEFAULT NULL,</span><br><span class="line">  `password` varchar(30) DEFAULT NULL,</span><br><span class="line">  `auth_key` char(50) DEFAULT NULL</span><br><span class="line">) </span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="Generate-Model"><a href="#Generate-Model" class="headerlink" title="Generate Model"></a>Generate Model</h2><p>Next step is generate model with GII</p><img src="/2018/09/03/how-to-login-user-from-a-database/model.png" title="Generate UserAdmin Model"><h2 id="Add-function"><a href="#Add-function" class="headerlink" title="Add function"></a>Add function</h2><p>Update UserAdmin class in \models\UserAdmin.php</p><figure class="highlight php"><figcaption><span>UserAdmin.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserAdmin</span> <span class="keyword">extends</span> \<span class="title">yii</span>\<span class="title">db</span>\<span class="title">ActiveRecord</span> <span class="keyword">implements</span> \<span class="title">yii</span>\<span class="title">web</span>\<span class="title">IdentityInterface</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">...</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getAuthKey</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;authKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getId</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">validateAuthKey</span><span class="params">($authKey)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;authKey === $authKey;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">findIdentity</span><span class="params">($id)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>::findOne($id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">findIdentityByAccessToken</span><span class="params">($token, $type = null)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> \yii\base\NotSupportedException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">findByUsername</span><span class="params">($username)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>::findOne([<span class="string">'username'</span> =&gt; $username]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">validatePassword</span><span class="params">($password)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;password === $password;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Update LoginForm Class in \models\LoginForm.php</p><figure class="highlight php"><figcaption><span>LoginForm.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getUser</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_user === <span class="keyword">false</span>) &#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_user = UserAdmin::findByUsername(<span class="keyword">$this</span>-&gt;username);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_user;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="Configure-component"><a href="#Configure-component" class="headerlink" title="Configure component"></a>Configure component</h2><p>Keep in mind to modify in the config path the \config\web.php file.</p><figure class="highlight php"><figcaption><span>web.php</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'user'</span> =&gt; [</span><br><span class="line">    <span class="string">'identityClass'</span> =&gt; <span class="string">'app\models\UserAdmin'</span>,</span><br><span class="line">    <span class="string">'enableAutoLogin'</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line">    <span class="string">'enableSession'</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line">],</span><br></pre></td></tr></table></figure><h2 id="Watch"><a href="#Watch" class="headerlink" title="Watch"></a>Watch</h2><div class="video-container"><iframe src="//www.youtube.com/embed/O7oEl7TUqtA" frameborder="0" allowfullscreen></iframe></div>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This tutorial explains how to make login functionality with users coming from database. Login functionality is one of the most important parts of every application. &lt;/p&gt;
&lt;h2 id=&quot;Create-table&quot;&gt;&lt;a href=&quot;#Create-table&quot; class=&quot;headerlink&quot; title=&quot;Create table&quot;&gt;&lt;/a&gt;Create table&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CREATE TABLE `user_admin` (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `id` int(10) UNSIGNED NOT NULL,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `first_name` varchar(15) DEFAULT NULL,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `last_name` varchar(20) DEFAULT NULL,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `username` varchar(30) DEFAULT NULL,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `password` varchar(30) DEFAULT NULL,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  `auth_key` char(50) DEFAULT NULL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;) &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Yii Framework" scheme="http://buqento.com/categories/Yii-Framework/"/>
    
    
  </entry>
  
</feed>
